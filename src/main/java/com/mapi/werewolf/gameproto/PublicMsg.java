// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sanguosha.com/werewolf/gameproto/public_msg.proto

package com.mapi.werewolf.gameproto;

public final class PublicMsg {
  private PublicMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.mapi.werewolf.gameproto.LoginErrCode}
   */
  public enum LoginErrCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LoginErrCode_SUCCEED = 0;</code>
     */
    LoginErrCode_SUCCEED(0),
    /**
     * <code>GT_Starting = 1;</code>
     */
    GT_Starting(1),
    /**
     * <pre>
     * 登录超时
     * </pre>
     *
     * <code>GT_TimeOut = 2;</code>
     */
    GT_TimeOut(2),
    /**
     * <pre>
     * 正在登录中
     * </pre>
     *
     * <code>GT_Logining = 3;</code>
     */
    GT_Logining(3),
    /**
     * <pre>
     * 已经登录
     * </pre>
     *
     * <code>GT_Logined = 4;</code>
     */
    GT_Logined(4),
    /**
     * <pre>
     * 重复登录,你被踢啦
     * </pre>
     *
     * <code>GT_ReLogined = 5;</code>
     */
    GT_ReLogined(5),
    /**
     * <pre>
     * 数据库操作失败
     * </pre>
     *
     * <code>GT_DBErr = 6;</code>
     */
    GT_DBErr(6),
    /**
     * <pre>
     * 无此用户或密码错误
     * </pre>
     *
     * <code>GT_NOUserOrPWD = 7;</code>
     */
    GT_NOUserOrPWD(7),
    /**
     * <pre>
     * 已到测试人数上限
     * </pre>
     *
     * <code>GT_TestMaxLoginLimit = 8;</code>
     */
    GT_TestMaxLoginLimit(8),
    /**
     * <pre>
     * 登录人数上限
     * </pre>
     *
     * <code>GT_MaxLoginLimit = 9;</code>
     */
    GT_MaxLoginLimit(9),
    /**
     * <pre>
     * 账号被短时封停
     * </pre>
     *
     * <code>GT_BanLoginShortTime = 10;</code>
     */
    GT_BanLoginShortTime(10),
    /**
     * <pre>
     * 账号被永久封停
     * </pre>
     *
     * <code>GT_BanLoginForever = 11;</code>
     */
    GT_BanLoginForever(11),
    /**
     * <pre>
     * ip不能登录，status可能是on_inner状态
     * </pre>
     *
     * <code>GT_IpLimitOnInner = 12;</code>
     */
    GT_IpLimitOnInner(12),
    /**
     * <pre>
     * sign过期
     * </pre>
     *
     * <code>GT_ExpirySign = 13;</code>
     */
    GT_ExpirySign(13),
    /**
     * <pre>
     *被防沉迷22-8点禁止登录
     * </pre>
     *
     * <code>GT_FcmPunishedOl22t8 = 14;</code>
     */
    GT_FcmPunishedOl22t8(14),
    /**
     * <pre>
     *被防沉迷
     * </pre>
     *
     * <code>GT_FcmPunishedOl2Long = 15;</code>
     */
    GT_FcmPunishedOl2Long(15),
    /**
     * <pre>
     *白名单状态，不能登录
     * </pre>
     *
     * <code>GT_SvrStaWhiteList = 16;</code>
     */
    GT_SvrStaWhiteList(16),
    /**
     * <pre>
     *服务关闭状态，不能登录
     * </pre>
     *
     * <code>GT_SvrStaOff = 17;</code>
     */
    GT_SvrStaOff(17),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LoginErrCode_SUCCEED = 0;</code>
     */
    public static final int LoginErrCode_SUCCEED_VALUE = 0;
    /**
     * <code>GT_Starting = 1;</code>
     */
    public static final int GT_Starting_VALUE = 1;
    /**
     * <pre>
     * 登录超时
     * </pre>
     *
     * <code>GT_TimeOut = 2;</code>
     */
    public static final int GT_TimeOut_VALUE = 2;
    /**
     * <pre>
     * 正在登录中
     * </pre>
     *
     * <code>GT_Logining = 3;</code>
     */
    public static final int GT_Logining_VALUE = 3;
    /**
     * <pre>
     * 已经登录
     * </pre>
     *
     * <code>GT_Logined = 4;</code>
     */
    public static final int GT_Logined_VALUE = 4;
    /**
     * <pre>
     * 重复登录,你被踢啦
     * </pre>
     *
     * <code>GT_ReLogined = 5;</code>
     */
    public static final int GT_ReLogined_VALUE = 5;
    /**
     * <pre>
     * 数据库操作失败
     * </pre>
     *
     * <code>GT_DBErr = 6;</code>
     */
    public static final int GT_DBErr_VALUE = 6;
    /**
     * <pre>
     * 无此用户或密码错误
     * </pre>
     *
     * <code>GT_NOUserOrPWD = 7;</code>
     */
    public static final int GT_NOUserOrPWD_VALUE = 7;
    /**
     * <pre>
     * 已到测试人数上限
     * </pre>
     *
     * <code>GT_TestMaxLoginLimit = 8;</code>
     */
    public static final int GT_TestMaxLoginLimit_VALUE = 8;
    /**
     * <pre>
     * 登录人数上限
     * </pre>
     *
     * <code>GT_MaxLoginLimit = 9;</code>
     */
    public static final int GT_MaxLoginLimit_VALUE = 9;
    /**
     * <pre>
     * 账号被短时封停
     * </pre>
     *
     * <code>GT_BanLoginShortTime = 10;</code>
     */
    public static final int GT_BanLoginShortTime_VALUE = 10;
    /**
     * <pre>
     * 账号被永久封停
     * </pre>
     *
     * <code>GT_BanLoginForever = 11;</code>
     */
    public static final int GT_BanLoginForever_VALUE = 11;
    /**
     * <pre>
     * ip不能登录，status可能是on_inner状态
     * </pre>
     *
     * <code>GT_IpLimitOnInner = 12;</code>
     */
    public static final int GT_IpLimitOnInner_VALUE = 12;
    /**
     * <pre>
     * sign过期
     * </pre>
     *
     * <code>GT_ExpirySign = 13;</code>
     */
    public static final int GT_ExpirySign_VALUE = 13;
    /**
     * <pre>
     *被防沉迷22-8点禁止登录
     * </pre>
     *
     * <code>GT_FcmPunishedOl22t8 = 14;</code>
     */
    public static final int GT_FcmPunishedOl22t8_VALUE = 14;
    /**
     * <pre>
     *被防沉迷
     * </pre>
     *
     * <code>GT_FcmPunishedOl2Long = 15;</code>
     */
    public static final int GT_FcmPunishedOl2Long_VALUE = 15;
    /**
     * <pre>
     *白名单状态，不能登录
     * </pre>
     *
     * <code>GT_SvrStaWhiteList = 16;</code>
     */
    public static final int GT_SvrStaWhiteList_VALUE = 16;
    /**
     * <pre>
     *服务关闭状态，不能登录
     * </pre>
     *
     * <code>GT_SvrStaOff = 17;</code>
     */
    public static final int GT_SvrStaOff_VALUE = 17;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoginErrCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LoginErrCode forNumber(int value) {
      switch (value) {
        case 0: return LoginErrCode_SUCCEED;
        case 1: return GT_Starting;
        case 2: return GT_TimeOut;
        case 3: return GT_Logining;
        case 4: return GT_Logined;
        case 5: return GT_ReLogined;
        case 6: return GT_DBErr;
        case 7: return GT_NOUserOrPWD;
        case 8: return GT_TestMaxLoginLimit;
        case 9: return GT_MaxLoginLimit;
        case 10: return GT_BanLoginShortTime;
        case 11: return GT_BanLoginForever;
        case 12: return GT_IpLimitOnInner;
        case 13: return GT_ExpirySign;
        case 14: return GT_FcmPunishedOl22t8;
        case 15: return GT_FcmPunishedOl2Long;
        case 16: return GT_SvrStaWhiteList;
        case 17: return GT_SvrStaOff;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoginErrCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoginErrCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoginErrCode>() {
            public LoginErrCode findValueByNumber(int number) {
              return LoginErrCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mapi.werewolf.gameproto.PublicMsg.getDescriptor().getEnumTypes().get(0);
    }

    private static final LoginErrCode[] VALUES = values();

    public static LoginErrCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LoginErrCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mapi.werewolf.gameproto.LoginErrCode)
  }

  /**
   * Protobuf enum {@code com.mapi.werewolf.gameproto.BuyShopGoodsErrCode}
   */
  public enum BuyShopGoodsErrCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BuySG_Succ = 0;</code>
     */
    BuySG_Succ(0),
    /**
     * <code>BGErrUnkown = 1;</code>
     */
    BGErrUnkown(1),
    /**
     * <code>BGErrNoUser = 2;</code>
     */
    BGErrNoUser(2),
    /**
     * <code>BGErrUserShopData = 3;</code>
     */
    BGErrUserShopData(3),
    /**
     * <code>BGErrNoGoodsCfg = 4;</code>
     */
    BGErrNoGoodsCfg(4),
    /**
     * <code>BGErrDiffUpTime = 5;</code>
     */
    BGErrDiffUpTime(5),
    /**
     * <code>BGErrDiffShopType = 6;</code>
     */
    BGErrDiffShopType(6),
    /**
     * <code>BGErrDiffPrice = 7;</code>
     */
    BGErrDiffPrice(7),
    /**
     * <code>BGErrLimit = 8;</code>
     */
    BGErrLimit(8),
    /**
     * <code>BGErrNotEnoughMoney = 9;</code>
     */
    BGErrNotEnoughMoney(9),
    /**
     * <code>BGErrUserGoodsData = 10;</code>
     */
    BGErrUserGoodsData(10),
    /**
     * <code>BGErrAddItems = 11;</code>
     */
    BGErrAddItems(11),
    /**
     * <code>BGErrSubMoney = 12;</code>
     */
    BGErrSubMoney(12),
    /**
     * <code>BGErrTimeout = 13;</code>
     */
    BGErrTimeout(13),
    /**
     * <code>BGErrDiamondConsumeLimit = 14;</code>
     */
    BGErrDiamondConsumeLimit(14),
    /**
     * <code>BGErrNoGuildLvInfo = 15;</code>
     */
    BGErrNoGuildLvInfo(15),
    /**
     * <pre>
     *单次购买上限
     * </pre>
     *
     * <code>BGErrBuyMax = 16;</code>
     */
    BGErrBuyMax(16),
    /**
     * <pre>
     *竞技场胜利数不足
     * </pre>
     *
     * <code>BGErrRaceWinNumNotEnough = 17;</code>
     */
    BGErrRaceWinNumNotEnough(17),
    /**
     * <pre>
     *不在竞技场商店活动期
     * </pre>
     *
     * <code>BGErrRaceShopActPeriod = 18;</code>
     */
    BGErrRaceShopActPeriod(18),
    /**
     * <pre>
     *购买权道具不足
     * </pre>
     *
     * <code>BGErrNotEnoughBuyRightGood = 19;</code>
     */
    BGErrNotEnoughBuyRightGood(19),
    /**
     * <pre>
     *扣减购买权道具失败
     * </pre>
     *
     * <code>BGErrSubBuyRightGood = 20;</code>
     */
    BGErrSubBuyRightGood(20),
    /**
     * <pre>
     *禁止玩家充值购买
     * </pre>
     *
     * <code>BGErrBanUserShop = 21;</code>
     */
    BGErrBanUserShop(21),
    /**
     * <pre>
     *禁止购买
     * </pre>
     *
     * <code>BGErrBanBuyByGm = 22;</code>
     */
    BGErrBanBuyByGm(22),
    /**
     * <pre>
     *可以购买
     * </pre>
     *
     * <code>BuySG_CanBuy = 100;</code>
     */
    BuySG_CanBuy(100),
    /**
     * <pre>
     *rmb充值载入玩家数据失败
     * </pre>
     *
     * <code>RmbErrLoadUser = 101;</code>
     */
    RmbErrLoadUser(101),
    /**
     * <pre>
     *rmb充值狼印失败
     * </pre>
     *
     * <code>RmbErrAddGold = 102;</code>
     */
    RmbErrAddGold(102),
    /**
     * <pre>
     *rmb查找shopId失败
     * </pre>
     *
     * <code>RmbErrShopId = 103;</code>
     */
    RmbErrShopId(103),
    /**
     * <pre>
     *rmb补偿配置失败
     * </pre>
     *
     * <code>RmbErrMakeUpCfg = 104;</code>
     */
    RmbErrMakeUpCfg(104),
    /**
     * <pre>
     *rmb加补偿道具失败
     * </pre>
     *
     * <code>RmbErrAddMakeUp = 105;</code>
     */
    RmbErrAddMakeUp(105),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BuySG_Succ = 0;</code>
     */
    public static final int BuySG_Succ_VALUE = 0;
    /**
     * <code>BGErrUnkown = 1;</code>
     */
    public static final int BGErrUnkown_VALUE = 1;
    /**
     * <code>BGErrNoUser = 2;</code>
     */
    public static final int BGErrNoUser_VALUE = 2;
    /**
     * <code>BGErrUserShopData = 3;</code>
     */
    public static final int BGErrUserShopData_VALUE = 3;
    /**
     * <code>BGErrNoGoodsCfg = 4;</code>
     */
    public static final int BGErrNoGoodsCfg_VALUE = 4;
    /**
     * <code>BGErrDiffUpTime = 5;</code>
     */
    public static final int BGErrDiffUpTime_VALUE = 5;
    /**
     * <code>BGErrDiffShopType = 6;</code>
     */
    public static final int BGErrDiffShopType_VALUE = 6;
    /**
     * <code>BGErrDiffPrice = 7;</code>
     */
    public static final int BGErrDiffPrice_VALUE = 7;
    /**
     * <code>BGErrLimit = 8;</code>
     */
    public static final int BGErrLimit_VALUE = 8;
    /**
     * <code>BGErrNotEnoughMoney = 9;</code>
     */
    public static final int BGErrNotEnoughMoney_VALUE = 9;
    /**
     * <code>BGErrUserGoodsData = 10;</code>
     */
    public static final int BGErrUserGoodsData_VALUE = 10;
    /**
     * <code>BGErrAddItems = 11;</code>
     */
    public static final int BGErrAddItems_VALUE = 11;
    /**
     * <code>BGErrSubMoney = 12;</code>
     */
    public static final int BGErrSubMoney_VALUE = 12;
    /**
     * <code>BGErrTimeout = 13;</code>
     */
    public static final int BGErrTimeout_VALUE = 13;
    /**
     * <code>BGErrDiamondConsumeLimit = 14;</code>
     */
    public static final int BGErrDiamondConsumeLimit_VALUE = 14;
    /**
     * <code>BGErrNoGuildLvInfo = 15;</code>
     */
    public static final int BGErrNoGuildLvInfo_VALUE = 15;
    /**
     * <pre>
     *单次购买上限
     * </pre>
     *
     * <code>BGErrBuyMax = 16;</code>
     */
    public static final int BGErrBuyMax_VALUE = 16;
    /**
     * <pre>
     *竞技场胜利数不足
     * </pre>
     *
     * <code>BGErrRaceWinNumNotEnough = 17;</code>
     */
    public static final int BGErrRaceWinNumNotEnough_VALUE = 17;
    /**
     * <pre>
     *不在竞技场商店活动期
     * </pre>
     *
     * <code>BGErrRaceShopActPeriod = 18;</code>
     */
    public static final int BGErrRaceShopActPeriod_VALUE = 18;
    /**
     * <pre>
     *购买权道具不足
     * </pre>
     *
     * <code>BGErrNotEnoughBuyRightGood = 19;</code>
     */
    public static final int BGErrNotEnoughBuyRightGood_VALUE = 19;
    /**
     * <pre>
     *扣减购买权道具失败
     * </pre>
     *
     * <code>BGErrSubBuyRightGood = 20;</code>
     */
    public static final int BGErrSubBuyRightGood_VALUE = 20;
    /**
     * <pre>
     *禁止玩家充值购买
     * </pre>
     *
     * <code>BGErrBanUserShop = 21;</code>
     */
    public static final int BGErrBanUserShop_VALUE = 21;
    /**
     * <pre>
     *禁止购买
     * </pre>
     *
     * <code>BGErrBanBuyByGm = 22;</code>
     */
    public static final int BGErrBanBuyByGm_VALUE = 22;
    /**
     * <pre>
     *可以购买
     * </pre>
     *
     * <code>BuySG_CanBuy = 100;</code>
     */
    public static final int BuySG_CanBuy_VALUE = 100;
    /**
     * <pre>
     *rmb充值载入玩家数据失败
     * </pre>
     *
     * <code>RmbErrLoadUser = 101;</code>
     */
    public static final int RmbErrLoadUser_VALUE = 101;
    /**
     * <pre>
     *rmb充值狼印失败
     * </pre>
     *
     * <code>RmbErrAddGold = 102;</code>
     */
    public static final int RmbErrAddGold_VALUE = 102;
    /**
     * <pre>
     *rmb查找shopId失败
     * </pre>
     *
     * <code>RmbErrShopId = 103;</code>
     */
    public static final int RmbErrShopId_VALUE = 103;
    /**
     * <pre>
     *rmb补偿配置失败
     * </pre>
     *
     * <code>RmbErrMakeUpCfg = 104;</code>
     */
    public static final int RmbErrMakeUpCfg_VALUE = 104;
    /**
     * <pre>
     *rmb加补偿道具失败
     * </pre>
     *
     * <code>RmbErrAddMakeUp = 105;</code>
     */
    public static final int RmbErrAddMakeUp_VALUE = 105;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BuyShopGoodsErrCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BuyShopGoodsErrCode forNumber(int value) {
      switch (value) {
        case 0: return BuySG_Succ;
        case 1: return BGErrUnkown;
        case 2: return BGErrNoUser;
        case 3: return BGErrUserShopData;
        case 4: return BGErrNoGoodsCfg;
        case 5: return BGErrDiffUpTime;
        case 6: return BGErrDiffShopType;
        case 7: return BGErrDiffPrice;
        case 8: return BGErrLimit;
        case 9: return BGErrNotEnoughMoney;
        case 10: return BGErrUserGoodsData;
        case 11: return BGErrAddItems;
        case 12: return BGErrSubMoney;
        case 13: return BGErrTimeout;
        case 14: return BGErrDiamondConsumeLimit;
        case 15: return BGErrNoGuildLvInfo;
        case 16: return BGErrBuyMax;
        case 17: return BGErrRaceWinNumNotEnough;
        case 18: return BGErrRaceShopActPeriod;
        case 19: return BGErrNotEnoughBuyRightGood;
        case 20: return BGErrSubBuyRightGood;
        case 21: return BGErrBanUserShop;
        case 22: return BGErrBanBuyByGm;
        case 100: return BuySG_CanBuy;
        case 101: return RmbErrLoadUser;
        case 102: return RmbErrAddGold;
        case 103: return RmbErrShopId;
        case 104: return RmbErrMakeUpCfg;
        case 105: return RmbErrAddMakeUp;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuyShopGoodsErrCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BuyShopGoodsErrCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuyShopGoodsErrCode>() {
            public BuyShopGoodsErrCode findValueByNumber(int number) {
              return BuyShopGoodsErrCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mapi.werewolf.gameproto.PublicMsg.getDescriptor().getEnumTypes().get(1);
    }

    private static final BuyShopGoodsErrCode[] VALUES = values();

    public static BuyShopGoodsErrCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BuyShopGoodsErrCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mapi.werewolf.gameproto.BuyShopGoodsErrCode)
  }

  /**
   * Protobuf enum {@code com.mapi.werewolf.gameproto.AuthErr}
   */
  public enum AuthErr
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AuthErrCode_INVALID = 0;</code>
     */
    AuthErrCode_INVALID(0),
    /**
     * <code>AuthErrCode_SUCCEED = 1;</code>
     */
    AuthErrCode_SUCCEED(1),
    /**
     * <pre>
     * 账号被锁定
     * </pre>
     *
     * <code>AE_AccountIsLocked = 1001;</code>
     */
    AE_AccountIsLocked(1001),
    /**
     * <pre>
     * 账号被封禁
     * </pre>
     *
     * <code>AE_AccountIsBanned = 1002;</code>
     */
    AE_AccountIsBanned(1002),
    /**
     * <pre>
     * 用户认证失败
     * </pre>
     *
     * <code>AE_AuthAccountFailed = 1003;</code>
     */
    AE_AuthAccountFailed(1003),
    /**
     * <pre>
     * 错误参数
     * </pre>
     *
     * <code>AE_AuthErrParams = 1004;</code>
     */
    AE_AuthErrParams(1004),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AuthErrCode_INVALID = 0;</code>
     */
    public static final int AuthErrCode_INVALID_VALUE = 0;
    /**
     * <code>AuthErrCode_SUCCEED = 1;</code>
     */
    public static final int AuthErrCode_SUCCEED_VALUE = 1;
    /**
     * <pre>
     * 账号被锁定
     * </pre>
     *
     * <code>AE_AccountIsLocked = 1001;</code>
     */
    public static final int AE_AccountIsLocked_VALUE = 1001;
    /**
     * <pre>
     * 账号被封禁
     * </pre>
     *
     * <code>AE_AccountIsBanned = 1002;</code>
     */
    public static final int AE_AccountIsBanned_VALUE = 1002;
    /**
     * <pre>
     * 用户认证失败
     * </pre>
     *
     * <code>AE_AuthAccountFailed = 1003;</code>
     */
    public static final int AE_AuthAccountFailed_VALUE = 1003;
    /**
     * <pre>
     * 错误参数
     * </pre>
     *
     * <code>AE_AuthErrParams = 1004;</code>
     */
    public static final int AE_AuthErrParams_VALUE = 1004;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AuthErr valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AuthErr forNumber(int value) {
      switch (value) {
        case 0: return AuthErrCode_INVALID;
        case 1: return AuthErrCode_SUCCEED;
        case 1001: return AE_AccountIsLocked;
        case 1002: return AE_AccountIsBanned;
        case 1003: return AE_AuthAccountFailed;
        case 1004: return AE_AuthErrParams;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AuthErr>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AuthErr> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AuthErr>() {
            public AuthErr findValueByNumber(int number) {
              return AuthErr.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mapi.werewolf.gameproto.PublicMsg.getDescriptor().getEnumTypes().get(2);
    }

    private static final AuthErr[] VALUES = values();

    public static AuthErr valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AuthErr(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mapi.werewolf.gameproto.AuthErr)
  }

  /**
   * Protobuf enum {@code com.mapi.werewolf.gameproto.ServerOnlineErrCode}
   */
  public enum ServerOnlineErrCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ServerOnlineErrCode_SUCCEED = 0;</code>
     */
    ServerOnlineErrCode_SUCCEED(0),
    /**
     * <code>RT_AlreadyOnline = 1;</code>
     */
    RT_AlreadyOnline(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ServerOnlineErrCode_SUCCEED = 0;</code>
     */
    public static final int ServerOnlineErrCode_SUCCEED_VALUE = 0;
    /**
     * <code>RT_AlreadyOnline = 1;</code>
     */
    public static final int RT_AlreadyOnline_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ServerOnlineErrCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ServerOnlineErrCode forNumber(int value) {
      switch (value) {
        case 0: return ServerOnlineErrCode_SUCCEED;
        case 1: return RT_AlreadyOnline;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ServerOnlineErrCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ServerOnlineErrCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServerOnlineErrCode>() {
            public ServerOnlineErrCode findValueByNumber(int number) {
              return ServerOnlineErrCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mapi.werewolf.gameproto.PublicMsg.getDescriptor().getEnumTypes().get(3);
    }

    private static final ServerOnlineErrCode[] VALUES = values();

    public static ServerOnlineErrCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ServerOnlineErrCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mapi.werewolf.gameproto.ServerOnlineErrCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1sanguosha.com/werewolf/gameproto/publi" +
      "c_msg.proto\022\033com.mapi.werewolf.gameproto" +
      "*\211\003\n\014LoginErrCode\022\030\n\024LoginErrCode_SUCCEE" +
      "D\020\000\022\017\n\013GT_Starting\020\001\022\016\n\nGT_TimeOut\020\002\022\017\n\013" +
      "GT_Logining\020\003\022\016\n\nGT_Logined\020\004\022\020\n\014GT_ReLo" +
      "gined\020\005\022\014\n\010GT_DBErr\020\006\022\022\n\016GT_NOUserOrPWD\020" +
      "\007\022\030\n\024GT_TestMaxLoginLimit\020\010\022\024\n\020GT_MaxLog" +
      "inLimit\020\t\022\030\n\024GT_BanLoginShortTime\020\n\022\026\n\022G" +
      "T_BanLoginForever\020\013\022\025\n\021GT_IpLimitOnInner" +
      "\020\014\022\021\n\rGT_ExpirySign\020\r\022\030\n\024GT_FcmPunishedO" +
      "l22t8\020\016\022\031\n\025GT_FcmPunishedOl2Long\020\017\022\026\n\022GT" +
      "_SvrStaWhiteList\020\020\022\020\n\014GT_SvrStaOff\020\021*\207\005\n" +
      "\023BuyShopGoodsErrCode\022\016\n\nBuySG_Succ\020\000\022\017\n\013" +
      "BGErrUnkown\020\001\022\017\n\013BGErrNoUser\020\002\022\025\n\021BGErrU" +
      "serShopData\020\003\022\023\n\017BGErrNoGoodsCfg\020\004\022\023\n\017BG" +
      "ErrDiffUpTime\020\005\022\025\n\021BGErrDiffShopType\020\006\022\022" +
      "\n\016BGErrDiffPrice\020\007\022\016\n\nBGErrLimit\020\010\022\027\n\023BG" +
      "ErrNotEnoughMoney\020\t\022\026\n\022BGErrUserGoodsDat" +
      "a\020\n\022\021\n\rBGErrAddItems\020\013\022\021\n\rBGErrSubMoney\020" +
      "\014\022\020\n\014BGErrTimeout\020\r\022\034\n\030BGErrDiamondConsu" +
      "meLimit\020\016\022\026\n\022BGErrNoGuildLvInfo\020\017\022\017\n\013BGE" +
      "rrBuyMax\020\020\022\034\n\030BGErrRaceWinNumNotEnough\020\021" +
      "\022\032\n\026BGErrRaceShopActPeriod\020\022\022\036\n\032BGErrNot" +
      "EnoughBuyRightGood\020\023\022\030\n\024BGErrSubBuyRight" +
      "Good\020\024\022\024\n\020BGErrBanUserShop\020\025\022\023\n\017BGErrBan" +
      "BuyByGm\020\026\022\020\n\014BuySG_CanBuy\020d\022\022\n\016RmbErrLoa" +
      "dUser\020e\022\021\n\rRmbErrAddGold\020f\022\020\n\014RmbErrShop" +
      "Id\020g\022\023\n\017RmbErrMakeUpCfg\020h\022\023\n\017RmbErrAddMa" +
      "keUp\020i*\237\001\n\007AuthErr\022\027\n\023AuthErrCode_INVALI" +
      "D\020\000\022\027\n\023AuthErrCode_SUCCEED\020\001\022\027\n\022AE_Accou" +
      "ntIsLocked\020\351\007\022\027\n\022AE_AccountIsBanned\020\352\007\022\031" +
      "\n\024AE_AuthAccountFailed\020\353\007\022\025\n\020AE_AuthErrP" +
      "arams\020\354\007*L\n\023ServerOnlineErrCode\022\037\n\033Serve" +
      "rOnlineErrCode_SUCCEED\020\000\022\024\n\020RT_AlreadyOn" +
      "line\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
